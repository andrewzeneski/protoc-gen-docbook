#summary The internal details that may be of interest for developers.
#labels Phase-Implementation

= Developer Details =

This page provides internal information that may be of interest for developers.

== From protoc to protoc-gen-docbook==

*protoc-gen-docbook* is a C++ process-based plugin used by the Protobuf Compiler (protoc).
The plugin architecture, which is well defined within protoc, allows it to load external process for additional language generation support.

Here is the developer oriented documentation in [https://developers.google.com/protocol-buffers/docs/reference/cpp/google.protobuf.compiler.plugin.pb plugin.pb.h]
{{{
// A plugin executable needs only to be placed somewhere in the path.  The
// plugin should be named "protoc-gen-$NAME", and will then be used when the
// flag "--${NAME}_out" is passed to protoc.
}}}

Therefore, protoc-gen-docbook relies on entirely on protoc to parse the input .proto source file. The parse results are then encoded in protobuf and be passed into protoc-gen-docbook through _stdin_. This information is called the *descriptor*. protoc-gen-docbook handles the descriptor information, and generates DocBook output.

If protoc-gen-docbook is in the same path as protoc, it will be loaded automatically through the following command.

{{{
protoc --docbook_out=. --proto_path=$your_proto_path $your_proto_file
}}}

----

== Transforming into DocBook ==

The transformation process into DocBook is fairly straight forward. Since .proto are basically composed of files, message, and fields, the structure maps well into DocBook [http://oreilly.com/catalog/docbook/book2/informaltable.html informaltable]

Here is a sample protobuf message:
{{{
message Person {

  // This field describes the full name of the person. It should be in
  // lastname/firstname format, and may or may not be unique.
  required string name = 1; 

  // This field describes the unique ID number for this person. 
  required int64 id = 2;

  // This field describes the email address of this person. If this person 
  // does not have a email addres, omit it.
  optional string email = 3;
}
}}}

The result DocBook will be map to:

{{{
<informaltable frame="all" xml:id="tutorial_Person">
  <tgroup cols="4">
    <colspec colname="c1" colnum="1" colwidth="3*" />
    <colspec colname="c2" colnum="2" colwidth="2*" />
    <colspec colname="c3" colnum="3" colwidth="2*" />
    <colspec colname="c4" colnum="4" colwidth="6*" />
      <thead>
        <row>
          <?dbhtml bgcolor="#A6B4C4" ?>
          <?dbfo bgcolor="#A6B4C4" ?>
          <entry>Field</entry>
          <entry>Type</entry>
          <entry>Rule</entry>
          <entry>Description</entry>
        </row>
      </thead>      
      <tbody>
        <row>
          <?dbhtml bgcolor="#ffffff" ?>
          <?dbfo bgcolor="#ffffff" ?>
          <entry>name</entry>
          <entry><emphasis role="underline" 
			xlink:href="#protobuf_scalar_value_types">string</emphasis>
		  </entry>
          <entry>required</entry>
          <entry>
            <para> a person&apos;s name, required btw, must be awesome
          </para>
          </entry>
        </row>

        <row>
          <?dbhtml bgcolor="#f0f0f0" ?>
          <?dbfo bgcolor="#f0f0f0" ?>
          <entry>id</entry>
          <entry><emphasis role="underline" 
            link:href="#protobuf_scalar_value_types">int32</emphasis>
		  </entry>
          <entry>required</entry>
          <entry>
            <para>  Unique ID number for this person.</para>
          </entry>
        </row>
        <row>
          <?dbhtml bgcolor="#ffffff" ?>
          <?dbfo bgcolor="#ffffff" ?>
          <entry>email</entry>
          <entry><emphasis role="underline" x
			link:href="#protobuf_scalar_value_types">string</emphasis>
		  </entry>
          <entry>optional</entry>
          <entry></entry>
        </row>
    </tbody>
  </tgroup>
</informaltable>
}}}

----

== DocBook Into PDF==

The transformation from DocBook into PDF is done through Apache FOP with DocBook stylesheets. Apache FOP (Apache 2.0 License), and DocBook stylesheets (MIT-like license) are both freely available.

With these powerful tools, transforming DocBook into PDF is simply a command away.

Here's the Windows version of transformation command.
{{{
cmd /c %fop_path%\fop.bat ^
-xml %docbook_input% ^
-xsl %fop_path%\docbook-xsl-1.78.0\fo\docbook.xsl ^
-pdf %pdf_output% ^
-param page.orientation landscape ^
-param paper.type USletter
}}}
